{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","totalPages","Math","ceil","pageNumbers","Array","from","length","_","index","handlePageChange","page","className","cn","disabled","href","onClick","map","item","names","active","items","to","numbers","n","push","getNumbers","App","useState","countItem","setCountItem","setPage","startItem","endItem","id","value","onChange","event","target","htmlFor","slice","ReactDOM","render","document","getElementById"],"mappings":"oNAUaA,EAA8B,SAAC,GAKrC,IAAD,IAJJC,aAII,MAJI,GAIJ,MAHJC,eAGI,MAHM,EAGN,MAFJC,mBAEI,MAFU,EAEV,EADJC,EACI,EADJA,aAEMC,EAAaC,KAAKC,KAAKN,EAAQC,GAE/BM,EAAcC,MAAMC,KACxB,CAAEC,OAAQN,IACV,SAACO,EAAGC,GAAJ,OAAcA,EAAQ,KAGlBC,EAAmB,SAACC,GACpBZ,IAAgBY,GAClBX,EAAaW,IAgBjB,OACE,qBAAIC,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAG,YAAa,CACzBC,SAA0B,IAAhBf,IAFd,SAKE,mBACE,UAAQ,WACRa,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBhB,EACX,OACA,QACJiB,QAAS,WAzBXjB,EAAc,GAChBW,EAAiBX,EAAc,IAiB7B,oBAYDK,EAAYa,KAAI,SAACC,GAChB,IAAMC,EAAQN,IAAG,YAAa,CAC5BO,OAAQrB,IAAgBmB,IAG1B,OACE,oBAAIN,UAAWO,EAAf,SACE,mBACE,UAAQ,WACRP,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMN,EAAiBQ,IAJlC,SAMGA,KAPsBA,MAY/B,oBACEN,UAAWC,IAAG,YAAa,CACzBC,SAAUf,IAAgBE,IAF9B,SAKE,mBACE,UAAQ,WACRW,UAAU,YACVG,KAAK,QACL,gBAAehB,IAAgBE,EAC3B,OACA,QACJe,QAAS,WAtDXjB,IAAgBE,GAClBS,EAAiBX,EAAc,IA8C7B,wBC9EFsB,ECLC,SAAoBf,EAAcgB,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIlB,EAAMkB,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDFKG,CAAW,EAAG,IAAIT,KAAI,SAACO,GAAD,qBAAeA,MAEtCG,EAAgB,WAC3B,MAAkCC,mBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwBF,mBAAS,GAAjC,mBAAOjB,EAAP,KAAaoB,EAAb,KACMC,GAAarB,EAAO,GAAKkB,EACzBI,EAAYD,EAAYH,EAAaR,EAAMd,OAC7Cc,EAAMd,OACNyB,EAAYH,EAShB,OACE,sBAAKjB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWD,EADX,mBAC0BqB,EAAY,EADtC,cAC6CC,EAD7C,eAEIZ,EAAMd,OAFV,OAMA,sBAAKK,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRsB,GAAG,kBACHtB,UAAU,eACVuB,MAAON,EACPO,SAxBkB,SAACC,GAC3B,IAAQF,EAAUE,EAAMC,OAAhBH,MAERL,GAAcK,GACdJ,EAAQ,IAeF,UAOE,wBAAQI,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkB3B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEf,MAAO,GACPC,QAAS+B,EACT9B,YAAaY,EACbX,aAAc+B,IAEhB,6BACGV,EAAMmB,MAAMR,EAAWC,GAAShB,KAAI,SAACC,GAAD,OACnC,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YE1DlCuB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a6515210.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total = 42,\n  perPage = 5,\n  currentPage = 1,\n  onPageChange,\n}) => {\n  const totalPages = Math.ceil(total / perPage);\n\n  const pageNumbers = Array.from(\n    { length: totalPages },\n    (_, index) => index + 1,\n  );\n\n  const handlePageChange = (page: number) => {\n    if (currentPage !== page) {\n      onPageChange(page);\n    }\n  };\n\n  const forPrev = () => {\n    if (currentPage > 1) {\n      handlePageChange(currentPage - 1);\n    }\n  };\n\n  const forNext = () => {\n    if (currentPage !== totalPages) {\n      handlePageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={cn('page-item', {\n          disabled: currentPage === 1,\n        })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1\n            ? 'true'\n            : 'false'}\n          onClick={() => forPrev()}\n        >\n          «\n        </a>\n      </li>\n      {pageNumbers.map((item) => {\n        const names = cn('page-item', {\n          active: currentPage === item,\n        });\n\n        return (\n          <li className={names} key={item}>\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${item}`}\n              onClick={() => handlePageChange(item)}\n            >\n              {item}\n            </a>\n          </li>\n        );\n      })}\n      <li\n        className={cn('page-item', {\n          disabled: currentPage === totalPages,\n        })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === totalPages\n            ? 'true'\n            : 'false'}\n          onClick={() => forNext()}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState, ChangeEvent } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst items = getNumbers(1, 42).map((n) => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [countItem, setCountItem] = useState(5);\n  const [page, setPage] = useState(1);\n  const startItem = (page - 1) * countItem;\n  const endItem = ((startItem + countItem) > items.length)\n    ? items.length\n    : startItem + countItem;\n\n  const handlePerPageChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setCountItem(+value);\n    setPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${page} (items ${startItem + 1} - ${endItem} of ${\n          items.length\n        })`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={countItem}\n            onChange={handlePerPageChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={42}\n        perPage={countItem}\n        currentPage={page}\n        onPageChange={setPage}\n      />\n      <ul>\n        {items.slice(startItem, endItem).map((item) => (\n          <li data-cy=\"item\" key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}